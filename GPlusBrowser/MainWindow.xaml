<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:vm="clr-namespace:GPlusBrowser.ViewModel"
        xmlns:ctl="clr-namespace:GPlusBrowser.Controls"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Class="GPlusBrowser.MainWindow"
        Title="GPlusBrowser" Height="700" Width="530" x:Name="mainWindow"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <vm:IntToVisibilityConverter x:Key="intToVisibilityConverter" />
        <vm:IntToIntConverter x:Key="intToIntConverter" />
        <Style x:Key="iconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="userNameTextStyle" TargetType="{x:Type Run}">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="postTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="LineHeight" Value="18.2" />
        </Style>
        
        <Style x:Key="pageSwitcherStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <DockPanel x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <TabPanel x:Name="headerPanel" Height="0" DockPanel.Dock="Top" Visibility="Hidden" Background="Transparent" IsItemsHost="true" />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="accountSelectorStyle" TargetType="{x:Type ContentPresenter}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:AccountViewModel}">
                        <Grid Grid.ColumnSpan="2" Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="55" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,5,5,0" FontSize="21"><Run Text="Account"/></TextBlock>
                            <StackPanel Grid.Row="1">
                                <ItemsControl ItemsSource="{Binding Pages}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type vm:AccountViewModel}">
                                            <DockPanel Margin="20,0,15,15">
                                                <WrapPanel DockPanel.Dock="Bottom" Margin="15,10,0,0">
                                                    <Button Padding="8,5,8,5" Command="{Binding OpenStreamPanelCommand}" Content="ストリームを開く"/>
                                                </WrapPanel>
                                                <Image DockPanel.Dock="Left" Width="35" Height="35" Margin="0" HorizontalAlignment="Left" Source="{Binding UserIconUrl}" />
                                                <TextBlock Padding="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding UserName}" FontSize="18" />
                                            </DockPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="activityItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="streamItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="IsSelected" Value="{Binding IsActive, Mode=OneWayToSource}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:StreamViewModel}">
                        <ListBox Focusable="False" Background="Transparent"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 VirtualizingPanel.IsVirtualizing="True"
                                 VirtualizingPanel.VirtualizationMode="Recycling"
                                 VirtualizingPanel.ScrollUnit="Pixel"
                                 BorderThickness="0" ItemsSource="{Binding Activities}"
                                 ItemContainerStyle="{StaticResource activityItemStyle}">
                        </ListBox>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="accountStyle" TargetType="{x:Type TabItem}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:AccountViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <!--<ColumnDefinition Width="*" />-->
                                <!--通知類パネル-->
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Row="1" Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <DockPanel Grid.Row="0">
                                    <Button DockPanel.Dock="Left" Width="30" Height="30" Margin="10" Focusable="False" Style="{StaticResource iconButtonStyle}" Command="{Binding BackToAccountManagerCommand}">
                                        <Image Source="/Resources/back.png" />
                                    </Button>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Name="accountIcon" Width="30" Height="30" Margin="0,0,5,0" VerticalAlignment="Center" Source="{Binding UserIconUrl}" />
                                        <TextBlock FontSize="21" Margin="0,0,10,0" VerticalAlignment="Center" Text="Stream/" />
                                        <ComboBox Focusable="False" MinWidth="150" VerticalAlignment="Center" FontSize="16" SelectedIndex="{Binding Stream.SelectedCircleIndex}" DisplayMemberPath="CircleName" ItemsSource="{Binding Stream.DisplayStreams}" />
                                    </StackPanel>
                                </DockPanel>
                                <Border Grid.Row="1" Margin="12,0,0,0" VerticalAlignment="Top" Visibility="{Binding Stream.IsDisconnected, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}">
                                    <ContentPresenter Content="{Binding Stream.StreamErrorPanel}" />
                                </Border>
                                <TabControl Grid.Row="2" ItemsSource="{Binding Stream.DisplayStreams, Mode=OneWay}" SelectedIndex="{Binding Stream.SelectedCircleIndex, Mode=OneWay}" Style="{StaticResource pageSwitcherStyle}" ItemContainerStyle="{StaticResource streamItemStyle}" />
                            </Grid>
                            <!--<ContentPresenter Grid.Column="1" Content="{Binding Notification}" />-->
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="dialogStyle" TargetType="{x:Type TabControl}" BasedOn="{StaticResource pageSwitcherStyle}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:DialogViewModel}">
                        <Border Background="#80000000">
                            <Border Background="White" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,15,0,15">
                                    <TextBlock Text="{Binding Caption}" FontSize="15" />
                                    <TextBlock Text="{Binding MessageBoxText}" />
                                    <StackPanel Margin="0,10,0,0" HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button Command="{Binding CommitCommand}" Content="OK" MinWidth="80" Padding="10,5,10,5">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:ChangePropertyAction PropertyName="Result" TargetObject="{Binding}" Value="OK" />
                                                    <!--<i:InvokeCommandAction Command="{Binding CommitCommand}" />-->
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <DataTemplate DataType="{x:Type vm:AttachedLinkViewModel}">
            <Border BorderBrush="LightGray" BorderThickness="0,1,0,0" Margin="0,0,0,5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--<Image Grid.Column="0" Source="{Binding ThumnailUrl}" MaxWidth="150" MaxHeight="150" Stretch="Uniform" VerticalAlignment="Top" Margin="0,8,8,0" Visibility="{Binding ExistThumnailUrl, Converter={StaticResource booleanToVisibilityConverter}}" />-->
                    <TextBlock Grid.Column="1" Margin="0,8,0,0" TextWrapping="Wrap" Style="{StaticResource postTextStyle}">
                        <Hyperlink Focusable="False">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:LaunchUriOrFileAction Path="{Binding AncourUrl}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Run FontWeight="Bold" Text="{Binding AncourTitle}" />
                        </Hyperlink>
                        <LineBreak />
                        <Run Text="{Binding AncourIntroductionText}" />
                    </TextBlock>
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AttachedAlbumViewModel}">
            <ctl:ImageBox MaxHeight="500" Margin="0,0,0,5" ItemsSource="{Binding ThumbnailImages}" Content="{Binding SelectedImage}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AttachedImageViewModel}">
            <Border MaxHeight="500" Background="Black" Margin="0,0,0,5">
                <Image Source="{Binding Image}" />
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AttachedActivityViewModel}">
            <Border BorderBrush="LightGray" BorderThickness="0,1,0,0" Margin="0,0,0,5" Padding="0,5,0,5">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="25" Height="25" Source="{Binding OwnerIcon}" />
                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Style="{StaticResource postTextStyle}">
                            <Run>最初に</Run>
                            <Run Text="{Binding OwnerName}" Style="{StaticResource userNameTextStyle}" />
                            <Run>さんが共有</Run>
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Margin="0,5,0,5" ctl:InlineBehavior.Inline="{Binding PostContentInline}" TextWrapping="Wrap" Style="{StaticResource postTextStyle}" />
                    <ContentPresenter Content="{Binding AttachedContent}" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:CommentViewModel}">
            <Border BorderBrush="LightGray" BorderThickness="0,1,0,0" Padding="0,5,5,5">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="25" Height="25" SnapsToDevicePixels="True" Source="{Binding OwnerIconUrl}" />
                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Style="{StaticResource postTextStyle}">
                            <Run Text="{Binding OwnerName}" Style="{StaticResource userNameTextStyle}" />
                            <Run Text=" "/>
                            <Run Foreground="Gray" Text="{Binding CommentDate, StringFormat=-\{0\}-}" />
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Margin="0,3,0,0" ctl:InlineBehavior.Inline="{Binding PostContentInline}" TextWrapping="Wrap" Style="{StaticResource postTextStyle}" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ActivityViewModel}">
            <DataTemplate.Resources>
                <ctl:IsExpandCommentCountToStringConverter x:Key="commentExpanderHeaderConverter" />
            </DataTemplate.Resources>
            <Border Name="cardBorder" BorderThickness="1" Margin="8" Padding="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="45" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Width="40" Height="40" Margin="0,0,5,0" VerticalAlignment="Top" Source="{Binding PostUserIconUrl}" />
                    <StackPanel Grid.Column="1">
                        <TextBlock Margin="0,0,5,5" VerticalAlignment="Center" Style="{StaticResource postTextStyle}">
                            <Run Text="{Binding PostUserName}" Style="{StaticResource userNameTextStyle}" />
                            <Run Text=" "/>
                            <Span Foreground="Gray">
                                <Run Text="-"/>
                                    <Hyperlink TextDecorations="None" Foreground="Gray" Focusable="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <ei:LaunchUriOrFileAction Path="{Binding ActivityUrl}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseEnter">
                                                <ei:ChangePropertyAction PropertyName="TextDecorations" Value="Underline" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave">
                                                <ei:ChangePropertyAction PropertyName="TextDecorations" Value="None" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Run Text="{Binding PostDate}" />
                                    </Hyperlink>
                                <Run Text="-"/>
                            </Span>
                        </TextBlock>
                        <TextBlock Margin="0,0,0,5" ctl:InlineBehavior.Inline="{Binding PostContentInline}" TextWrapping="Wrap" Style="{StaticResource postTextStyle}" />
                        <ContentPresenter Content="{Binding AttachedContent}" />
                        <ctl:ExpandableListView ItemsSource="{Binding Comments}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                            <ctl:ExpandableListView.Header>
                                <MultiBinding Converter="{StaticResource commentExpanderHeaderConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" Path="IsExpand" />
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Items.Count" />
                                </MultiBinding>
                            </ctl:ExpandableListView.Header>
                        </ctl:ExpandableListView>
                        <StackPanel FocusManager.IsFocusScope="True" KeyboardNavigation.TabNavigation="Local" FocusVisualStyle="{x:Null}">
                            <Border BorderBrush="LightGray" BorderThickness="1">
                                <Grid Margin="2,1,2,1">
                                    <TextBlock FontSize="13" Foreground="LightGray" Text="コメントを追加...">
                                        <i:Interaction.Triggers>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Deactive">
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="1.0" />
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Writing">
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="0.0" />
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Sending">
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="0.0" />
                                            </ei:DataTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>
                                    <TextBox AcceptsReturn="True" BorderThickness="0" Focusable="True" FontSize="13" KeyboardNavigation.IsTabStop="True"
                                             Text="{Binding PostCommentText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Opacity="0.0">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="ShareBoxStatus" Value="Writing" />
                                            </i:EventTrigger>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Deactive">
                                                <ei:ChangePropertyAction PropertyName="Padding" Value="0" />
                                                <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="0.0" />
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Writing">
                                                <ei:ChangePropertyAction PropertyName="Padding" Value="0,0,0,20" />
                                                <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="1.0" />
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Sending">
                                                <ei:ChangePropertyAction PropertyName="Padding" Value="0,0,0,20" />
                                                <ei:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                                                <ei:ChangePropertyAction PropertyName="Opacity" Value="1.0" />
                                            </ei:DataTrigger>
                                        </i:Interaction.Triggers>
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Modifiers="Shift" Command="{Binding SendCommentCommand}" />
                                            <KeyBinding Key="Escape" Command="{Binding CancelCommentCommand}" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </Grid>
                            </Border>
                            <StackPanel Margin="0,5,0,0" Visibility="Collapsed" Orientation="Horizontal">
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Deactive">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Writing">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Sending">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                    </ei:DataTrigger>
                                </i:Interaction.Triggers>
                                <Button Padding="10,3,10,3" Margin="0,0,8,0" Content="コメントを投稿" Focusable="True" KeyboardNavigation.IsTabStop="True" Command="{Binding SendCommentCommand}">
                                    <i:Interaction.Triggers>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Deactive">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Writing">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Sending">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                                        </ei:DataTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.InputBindings>
                                        <KeyBinding Key="Escape" Command="{Binding CancelCommentCommand}" />
                                    </Button.InputBindings>
                                </Button>
                                <Button Padding="10,3,10,3" Margin="0,0,8,0" Content="キャンセル" Focusable="True" KeyboardNavigation.IsTabStop="True" Command="{Binding CancelCommentCommand}">
                                    <i:Interaction.Triggers>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Deactive">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Writing">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding ShareBoxStatus}" Value="Sending">
                                            <ei:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                                        </ei:DataTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.InputBindings>
                                        <KeyBinding Key="Escape" Command="{Binding CancelCommentCommand}" />
                                    </Button.InputBindings>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <i:Interaction.Triggers>
                    <ei:DataTrigger Value="True" Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <ei:ChangePropertyAction Value="DarkGray" PropertyName="BorderBrush" TargetObject="{Binding ElementName=cardBorder}" />
                    </ei:DataTrigger>
                    <ei:DataTrigger Value="False" Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <ei:ChangePropertyAction Value="LightGray" PropertyName="BorderBrush" TargetObject="{Binding ElementName=cardBorder}" />
                    </ei:DataTrigger>
                </i:Interaction.Triggers>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:StreamErrorPanelViewModel}">
            <Border Margin="0,0,0,8" BorderBrush="Orange" BorderThickness="0,1,0,1">
                <Button Padding="10,8,10,6" VerticalAlignment="Center" Style="{StaticResource iconButtonStyle}" Command="{Binding ReconnectCommand}">
                    <TextBlock Foreground="DarkOrange">ストリームの通信が切断されました。再接続する場合はここを押してください。</TextBlock>
                </Button>
            </Border>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <!--各アカウントの画面-->
        <TabControl ItemsSource="{Binding Pages}" SelectedIndex="{Binding SelectedPageIndex, Mode=OneWay}" Style="{StaticResource pageSwitcherStyle}" ItemContainerStyle="{StaticResource accountStyle}" />
        <!--アカウント選択画面-->
        <ContentPresenter Visibility="{Binding IsAccountSelectorMode, Converter={StaticResource booleanToVisibilityConverter}}"
                          Content="{Binding}" Style="{StaticResource accountSelectorStyle}" />
        <TabControl Visibility="{Binding DialogMessages.Count, Mode=OneWay, Converter={StaticResource intToVisibilityConverter}}"
                    SelectedIndex="{Binding DialogMessages.Count, Mode=OneWay, Converter={StaticResource intToIntConverter}}"
                    ItemsSource="{Binding DialogMessages}" Style="{StaticResource dialogStyle}" />
    </Grid>
</Window>